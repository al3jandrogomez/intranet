var SD_SHA1_NAME="SHA-1";var SD_SHA256_NAME="SHA-256";var SD_SHA384_NAME="SHA-384";var SD_SHA512_NAME="SHA-512";var CMS_SIGNED_DATA="1.2.840.113549.1.7.2";var DATA_CONTENT_TYPE="1.2.840.113549.1.7.1";var SD_RSAENCRYPTION="1.2.840.113549.1.1.1";var SD_SHA1_DOID="1.3.14.3.2.26";var SD_SHA256_DOID="2.16.840.1.101.3.4.2.1";var SD_SHA384_DOID="2.16.840.1.101.3.4.2.2";var SD_SHA512_DOID="2.16.840.1.101.3.4.2.3";var SD_UNKNOWN_ALGORITHM="An unknown hash Algorithm was supplied";var SD_ERROR_ENCODING_PKCS7="Error during encoding of PKCS#7 Signed Data: ";var SD_ERROR_EMPTY_SIGNATURE="An empty or invalid value was received for signature";var SD_ERROR_EMPTY_CERTIFICATE="An empty or invalid value was received for certificate";function empty(a){if(typeof(a)=="undefined"||a===null){return true}}function str2ab(e){var b=new ArrayBuffer(e.length);var a=new Uint8Array(b);for(var c=0,d=e.length;c<d;c++){a[c]=e.charCodeAt(c)}return b}function arrayBufferToString(c,g,h){var d=new Uint8Array(c);var f=d.length;var b="";for(var e=0;e<f;e+=65535){var a=65535;if(e+65535>f){a=f-e}b+=String.fromCharCode.apply(null,d.subarray(e,e+a))}if(b){if(g){g(b)}}else{if(h){h("buffer was invalid")}}return b}function SDSgLib_encodePKCS7Detached(d,c,b){var a=null;return SDSgLib_encodePKCS7(d,c,b,a)}function SDSgLib_encodePKCS7WithContent(d,c,b,a){return SDSgLib_encodePKCS7(d,c,b,a)}function SDSgLib_encodePKCS7(e,c,b,a){var d="";if(b==SD_SHA1_NAME){d=SD_SHA1_DOID}else{if(b==SD_SHA256_NAME){d=SD_SHA256_DOID}else{if(b==SD_SHA384_NAME){d=SD_SHA384_DOID}else{if(b==SD_SHA512_NAME){d=SD_SHA512_DOID}else{return new Promise(function(g,f){f(SD_UNKNOWN_ALGORITHM)})}}}}if(!(c instanceof ArrayBuffer)||c==null||c.length==0){return new Promise(function(g,f){f(SD_ERROR_EMPTY_SIGNATURE)})}if(!(typeof(e)=="string")||e==null||e.length==0){return new Promise(function(g,f){f(SD_ERROR_EMPTY_CERTIFICATE)})}return new Promise(function(i,h){var f=org.pkijs.fromBER(str2ab(e));var g=new org.pkijs.simpl.CERT({schema:f.result});var j=Promise.resolve();j=j.then(function(){var k=new org.pkijs.simpl.cms.EncapsulatedContentInfo({eContentType:DATA_CONTENT_TYPE});if(a!=null){k.eContent=new org.pkijs.asn1.OCTETSTRING({value_hex:a})}return new org.pkijs.simpl.CMS_SIGNED_DATA({version:1,digestAlgorithms:[new org.pkijs.simpl.ALGORITHM_IDENTIFIER({algorithm_id:d,algorithm_params:new org.pkijs.asn1.NULL()})],encapContentInfo:k,signerInfos:[new org.pkijs.simpl.CMS_SIGNER_INFO({version:1,sid:new org.pkijs.simpl.cms.IssuerAndSerialNumber({issuer:g.issuer,serialNumber:g.serialNumber}),digestAlgorithm:new org.pkijs.simpl.ALGORITHM_IDENTIFIER({algorithm_id:d,algorithm_params:new org.pkijs.asn1.NULL()}),signatureAlgorithm:new org.pkijs.simpl.ALGORITHM_IDENTIFIER({algorithm_id:SD_RSAENCRYPTION}),signature:new org.pkijs.asn1.OCTETSTRING({value_hex:c})})],certificates:[g]})});j.then(function(k){var m=k.toSchema(true);var l=new org.pkijs.simpl.CMS_CONTENT_INFO({contentType:CMS_SIGNED_DATA,content:m});var m=l.toSchema(true);var n=m.toBER(false);i(n)},function(k){alert(SD_ERROR_ENCODING_PKCS7+k)})})};