
(function(b){if(typeof b.org==="undefined"){b.org={}}else{if(typeof b.org!=="object"){throw new Error("Name org already exists and it's not an object")}}if(typeof b.org.pkijs==="undefined"){b.org.pkijs={}}else{if(typeof b.org.pkijs!=="object"){throw new Error("Name org.pkijs already exists and it's not an object but "+(typeof b.org.pkijs))}}if(typeof b.org.pkijs.simpl==="undefined"){b.org.pkijs.simpl={}}else{if(typeof b.org.pkijs.simpl!=="object"){throw new Error("Name org.pkijs.simpl already exists and it's not an object but "+(typeof b.org.pkijs.simpl))}}if(typeof b.org.pkijs.simpl.ocsp==="undefined"){b.org.pkijs.simpl.ocsp={}}else{if(typeof b.org.pkijs.simpl.ocsp!=="object"){throw new Error("Name org.pkijs.simpl.ocsp already exists and it's not an object but "+(typeof b.org.pkijs.simpl.ocsp))}}if(typeof b.org.pkijs.simpl.tsp==="undefined"){b.org.pkijs.simpl.tsp={}}else{if(typeof b.org.pkijs.simpl.tsp!=="object"){throw new Error("Name org.pkijs.simpl.tsp already exists and it's not an object but "+(typeof b.org.pkijs.simpl.tsp))}}var a={};b.org.pkijs.simpl.ocsp.CertID=function(){this.hashAlgorithm=new b.org.pkijs.simpl.ALGORITHM_IDENTIFIER();this.issuerNameHash=new b.org.pkijs.asn1.OCTETSTRING();this.issuerKeyHash=new b.org.pkijs.asn1.OCTETSTRING();this.serialNumber=new b.org.pkijs.asn1.INTEGER();if((arguments[0] instanceof Object)&&("schema" in arguments[0])){b.org.pkijs.simpl.ocsp.CertID.prototype.fromSchema.call(this,arguments[0].schema)}else{if(arguments[0] instanceof Object){this.hashAlgorithm=arguments[0].hashAlgorithm||new b.org.pkijs.simpl.ALGORITHM_IDENTIFIER();this.issuerNameHash=arguments[0].issuerNameHash||new b.org.pkijs.asn1.OCTETSTRING();this.issuerKeyHash=arguments[0].issuerKeyHash||new b.org.pkijs.asn1.OCTETSTRING();this.serialNumber=arguments[0].serialNumber||new b.org.pkijs.asn1.INTEGER()}}};b.org.pkijs.simpl.ocsp.CertID.prototype.fromSchema=function(d){var c=b.org.pkijs.compareSchema(d,d,b.org.pkijs.schema.ocsp.CertID({names:{hashAlgorithm:"hashAlgorithm",issuerNameHash:"issuerNameHash",issuerKeyHash:"issuerKeyHash",serialNumber:"serialNumber"}}));if(c.verified===false){throw new Error("Object's schema was not verified against input data for CertID")}this.hashAlgorithm=new b.org.pkijs.simpl.ALGORITHM_IDENTIFIER({schema:c.result.hashAlgorithm});this.issuerNameHash=c.result.issuerNameHash;this.issuerKeyHash=c.result.issuerKeyHash;this.serialNumber=c.result.serialNumber};b.org.pkijs.simpl.ocsp.CertID.prototype.toSchema=function(){return(new b.org.pkijs.asn1.SEQUENCE({value:[this.hashAlgorithm.toSchema(),this.issuerNameHash,this.issuerKeyHash,this.serialNumber]}))};b.org.pkijs.simpl.ocsp.CertID.prototype.toJSON=function(){return{hashAlgorithm:this.hashAlgorithm.toJSON(),issuerNameHash:this.issuerNameHash.toJSON(),issuerKeyHash:this.issuerKeyHash.toJSON(),serialNumber:this.serialNumber.toJSON()}};b.org.pkijs.simpl.ocsp.Request=function(){this.reqCert=new b.org.pkijs.simpl.ocsp.CertID();if((arguments[0] instanceof Object)&&("schema" in arguments[0])){b.org.pkijs.simpl.ocsp.Request.prototype.fromSchema.call(this,arguments[0].schema)}else{if(arguments[0] instanceof Object){this.reqCert=arguments[0].reqCert||new b.org.pkijs.simpl.ocsp.CertID();if("singleRequestExtensions" in arguments[0]){this.singleRequestExtensions=arguments[0].singleRequestExtensions}}}};b.org.pkijs.simpl.ocsp.Request.prototype.fromSchema=function(f){var c=b.org.pkijs.compareSchema(f,f,b.org.pkijs.schema.ocsp.Request({names:{reqCert:{names:{block_name:"reqCert"}},singleRequestExtensions:{names:{block_name:"singleRequestExtensions"}}}}));if(c.verified===false){throw new Error("Object's schema was not verified against input data for Request")}this.reqCert=new b.org.pkijs.simpl.ocsp.CertID({schema:c.result.reqCert});if("singleRequestExtensions" in c.result){this.singleRequestExtensions=new Array();var e=c.result.singleRequestExtensions.value_block.value;for(var d=0;d<e.length;d++){this.singleRequestExtensions.push(new b.org.pkijs.simpl.EXTENSION({schema:e[d]}))}}};b.org.pkijs.simpl.ocsp.Request.prototype.toSchema=function(){var e=new Array();e.push(this.reqCert.toSchema());if("singleRequestExtensions" in this){var d=new Array();for(var c=0;c<this.singleRequestExtensions.length;c++){d.push(this.singleRequestExtensions[c].toSchema())}e.push(new b.org.pkijs.asn1.ASN1_CONSTRUCTED({optional:true,id_block:{tag_class:3,tag_number:0},value:[new b.org.pkijs.asn1.SEQUENCE({value:d})]}))}return(new b.org.pkijs.asn1.SEQUENCE({value:e}))};b.org.pkijs.simpl.ocsp.Request.prototype.toJSON=function(){var d={reqCert:this.reqCert.toJSON()};if("singleRequestExtensions" in this){d.singleRequestExtensions=new Array();for(var c=0;c<this.singleRequestExtensions.length;c++){d.singleRequestExtensions.push(this.singleRequestExtensions[c].toJSON())}}return d};b.org.pkijs.simpl.ocsp.TBSRequest=function(){this.tbs=new ArrayBuffer(0);this.requestList=new Array();if((arguments[0] instanceof Object)&&("schema" in arguments[0])){b.org.pkijs.simpl.ocsp.TBSRequest.prototype.fromSchema.call(this,arguments[0].schema)}else{if(arguments[0] instanceof Object){this.tbs=arguments[0].tbs||new ArrayBuffer(0);if("version" in arguments[0]){this.version=arguments[0].version}if("requestorName" in arguments[0]){this.requestorName=arguments[0].requestorName}this.requestList=arguments[0].requestList||new Array();if("requestExtensions" in arguments[0]){this.requestExtensions=arguments[0].requestExtensions}}}};b.org.pkijs.simpl.ocsp.TBSRequest.prototype.fromSchema=function(f){var c=b.org.pkijs.compareSchema(f,f,b.org.pkijs.schema.ocsp.TBSRequest());if(c.verified===false){throw new Error("Object's schema was not verified against input data for TBSRequest")}this.tbs=c.result.TBSRequest.value_before_decode;if("TBSRequest.version" in c.result){this.version=c.result["TBSRequest.version"].value_block.value_dec}if("TBSRequest.requestorName" in c.result){this.requestorName=new b.org.pkijs.simpl.GENERAL_NAME({schema:c.result["TBSRequest.requestorName"]})}var g=c.result["TBSRequest.requests"];for(var e=0;e<g.length;e++){this.requestList.push(new b.org.pkijs.simpl.ocsp.Request({schema:g[e]}))}if("TBSRequest.requestExtensions" in c.result){this.requestExtensions=new Array();var d=c.result["TBSRequest.requestExtensions"].value_block.value;for(var e=0;e<d.length;e++){this.requestExtensions.push(new b.org.pkijs.simpl.EXTENSION({schema:d[e]}))}}};b.org.pkijs.simpl.ocsp.TBSRequest.prototype.toSchema=function(g){if(typeof g==="undefined"){g=false}var f;if(g===false){if(this.tbs.byteLength===0){return b.org.pkijs.schema.ocsp.TBSRequest()}f=b.org.pkijs.fromBER(this.tbs).result}else{var k=new Array();if("version" in this){k.push(new b.org.pkijs.asn1.ASN1_CONSTRUCTED({optional:true,id_block:{tag_class:3,tag_number:0},value:[new b.org.pkijs.asn1.INTEGER({value:this.version})]}))}if("requestorName" in this){k.push(new b.org.pkijs.asn1.ASN1_CONSTRUCTED({optional:true,id_block:{tag_class:3,tag_number:1},value:[this.requestorName.toSchema()]}))}var h=new Array();for(var d=0;d<this.requestList.length;d++){h.push(this.requestList[d].toSchema())}k.push(new b.org.pkijs.asn1.SEQUENCE({value:h}));if("requestExtensions" in this){var e=new Array();for(var c=0;c<this.requestExtensions.length;c++){e.push(this.requestExtensions[c].toSchema())}k.push(new b.org.pkijs.asn1.ASN1_CONSTRUCTED({optional:true,id_block:{tag_class:3,tag_number:2},value:[new b.org.pkijs.asn1.SEQUENCE({value:e})]}))}f=new b.org.pkijs.asn1.SEQUENCE({value:k})}return f};b.org.pkijs.simpl.ocsp.TBSRequest.prototype.toJSON=function(){var d={};if("version" in this){d.version=this.version}if("requestorName" in this){d.requestorName=this.requestorName.toJSON()}d.requestList=new Array();for(var c=0;c<this.requestList.length;c++){d.requestList.push(this.requestList[c].toJSON())}if("requestExtensions" in this){d.requestExtensions=new Array();for(var c=0;c<this.requestExtensions.length;c++){d.requestExtensions.push(this.requestExtensions[c].toJSON())}}return d};b.org.pkijs.simpl.ocsp.Signature=function(){this.signatureAlgorithm=new b.org.pkijs.simpl.ALGORITHM_IDENTIFIER();this.signature=new b.org.pkijs.asn1.BITSTRING();if((arguments[0] instanceof Object)&&("schema" in arguments[0])){b.org.pkijs.simpl.ocsp.Signature.prototype.fromSchema.call(this,arguments[0].schema)}else{if(arguments[0] instanceof Object){this.signatureAlgorithm=arguments[0].signatureAlgorithm||new b.org.pkijs.simpl.ALGORITHM_IDENTIFIER();this.signature=arguments[0].signature||new b.org.pkijs.asn1.BITSTRING();if("certs" in arguments[0]){this.certs=arguments[0].certs}}}};b.org.pkijs.simpl.ocsp.Signature.prototype.fromSchema=function(f){var c=b.org.pkijs.compareSchema(f,f,b.org.pkijs.schema.ocsp.Signature({names:{signatureAlgorithm:{names:{block_name:"signatureAlgorithm"}},signature:"signature",certs:"certs"}}));if(c.verified===false){throw new Error("Object's schema was not verified against input data for ocsp.Signature")}this.signatureAlgorithm=new b.org.pkijs.simpl.ALGORITHM_IDENTIFIER({schema:c.result.signatureAlgorithm});this.signature=c.result.signature;if("certs" in c.result){this.certs=new Array();var d=c.result.certs;for(var e=0;e<d;e++){this.certs.push(new b.org.pkijs.simpl.CERT({schema:d[e]}))}}};b.org.pkijs.simpl.ocsp.Signature.prototype.toSchema=function(){var e=new Array();e.push(this.signatureAlgorithm.toSchema());e.push(this.signature);if("certs" in this){var d=new Array();for(var c=0;c<this.certs.length;c++){d.push(this.certs[c].toSchema())}e.push(new b.org.pkijs.asn1.ASN1_CONSTRUCTED({optional:true,id_block:{tag_class:3,tag_number:0},value:[new b.org.pkijs.asn1.SEQUENCE({value:d})]}))}return(new b.org.pkijs.asn1.SEQUENCE({value:e}))};b.org.pkijs.simpl.ocsp.Signature.prototype.toJSON=function(){var d={signatureAlgorithm:this.signatureAlgorithm.toJSON(),signature:this.signature.toJSON(),};if("certs" in this){d.certs=new Array();for(var c=0;c<this.certs.length;c++){d.certs.push(this.certs[c].toJSON())}}return d};b.org.pkijs.simpl.OCSP_REQUEST=function(){this.tbsRequest=new b.org.pkijs.simpl.ocsp.TBSRequest();if((arguments[0] instanceof Object)&&("schema" in arguments[0])){b.org.pkijs.simpl.OCSP_REQUEST.prototype.fromSchema.call(this,arguments[0].schema)}else{if(arguments[0] instanceof Object){this.tbsRequest=arguments[0].tbsRequest||new b.org.pkijs.simpl.ocsp.TBSRequest();if("optionalSignature" in arguments[0]){this.optionalSignature=arguments[0].optionalSignature}}}};b.org.pkijs.simpl.OCSP_REQUEST.prototype.fromSchema=function(d){var c=b.org.pkijs.compareSchema(d,d,b.org.pkijs.schema.OCSP_REQUEST());if(c.verified===false){throw new Error("Object's schema was not verified against input data for OCSP_REQUEST")}this.tbsRequest=new b.org.pkijs.simpl.ocsp.TBSRequest({schema:c.result.tbsRequest});if("optionalSignature" in c.result){this.optionalSignature=new b.org.pkijs.simpl.ocsp.Signature({schema:c.result.optionalSignature})}};b.org.pkijs.simpl.OCSP_REQUEST.prototype.toSchema=function(c){if(typeof c==="undefined"){c=false}var d=new Array();d.push(this.tbsRequest.toSchema(c));if("optionalSignature" in this){d.push(this.optionalSignature.toSchema())}return(new b.org.pkijs.asn1.SEQUENCE({value:d}))};b.org.pkijs.simpl.OCSP_REQUEST.prototype.sign=function(j,d){var h=this;if(typeof j==="undefined"){return new Promise(function(n,m){m("Need to provide a private key for signing")})}if(typeof d==="undefined"){d="SHA-1"}else{var g=b.org.pkijs.getOIDByAlgorithm({name:d});if(g===""){return new Promise(function(n,m){m("Unsupported hash algorithm: "+d)})}}if(("optionalSignature" in this)===false){return new Promise(function(n,m){m('Need to create "optionalSignature" field before signing')})}var e=b.org.pkijs.getAlgorithmParameters(j.algorithm.name,"sign");e.algorithm.hash.name=d;switch(j.algorithm.name.toUpperCase()){case"RSASSA-PKCS1-V1_5":case"ECDSA":h.optionalSignature.signatureAlgorithm.algorithm_id=b.org.pkijs.getOIDByAlgorithm(e.algorithm);break;case"RSA-PSS":switch(d.toUpperCase()){case"SHA-256":e.algorithm.saltLength=32;break;case"SHA-384":e.algorithm.saltLength=48;break;case"SHA-512":e.algorithm.saltLength=64;break;default:}var k={};if(d.toUpperCase()!=="SHA-1"){var i=b.org.pkijs.getOIDByAlgorithm({name:d});if(i===""){return new Promise(function(n,m){m("Unsupported hash algorithm: "+d)})}k.hashAlgorithm=new b.org.pkijs.simpl.ALGORITHM_IDENTIFIER({algorithm_id:i,algorithm_params:new b.org.pkijs.asn1.NULL()});k.maskGenAlgorithm=new b.org.pkijs.simpl.ALGORITHM_IDENTIFIER({algorithm_id:"1.2.840.113549.1.1.8",algorithm_params:k.hashAlgorithm.toSchema()})}if(e.algorithm.saltLength!==20){k.saltLength=e.algorithm.saltLength}var l=new b.org.pkijs.simpl.x509.RSASSA_PSS_params(k);h.optionalSignature.signatureAlgorithm=new b.org.pkijs.simpl.ALGORITHM_IDENTIFIER({algorithm_id:"1.2.840.113549.1.1.10",algorithm_params:l.toSchema()});break;default:return new Promise(function(n,m){m("Unsupported signature algorithm: "+j.algorithm.name)})}var f=this.tbsRequest.toSchema(true).toBER(false);var c=b.org.pkijs.getCrypto();if(typeof c=="undefined"){return new Promise(function(n,m){m("Unable to create WebCrypto object")})}return c.sign(e.algorithm,j,new Uint8Array(f)).then(function(m){if(e.algorithm.name==="ECDSA"){m=b.org.pkijs.createCMSECDSASignature(m)}h.optionalSignature.signature=new b.org.pkijs.asn1.BITSTRING({value_hex:m})},function(m){return new Promise(function(o,n){n("Signing error: "+m)})})};b.org.pkijs.simpl.OCSP_REQUEST.prototype.toJSON=function(){var d={};if("version" in this){d.version=this.version}if("requestorName" in this){d.requestorName=this.requestorName.toJSON()}d.requestList=new Array();for(var c=0;c<this.requestList.length;c++){d.requestList.push(this.requestList[c].toJSON())}if("requestExtensions" in this){d.requestExtensions=new Array();for(var c=0;c<this.requestExtensions.length;c++){d.requestExtensions.push(this.requestExtensions[c].toJSON())}}if("optionalSignature" in this){d.optionalSignature=this.optionalSignature.toJSON()}return d};b.org.pkijs.simpl.OCSP_REQUEST.prototype.createForCertificate=function(h,l){var g=this;var e=Promise.resolve();var d;var k;var j;var f;var i;var c=b.org.pkijs.getCrypto();if(typeof c=="undefined"){return new Promise(function(n,m){m("Unable to create WebCrypto object")})}if("hashAlgorithm" in l){d=l.hashAlgorithm}else{return new Promise(function(n,m){m('Parameter "hashAlgorithm" is mandatory for "OCSP_REQUEST.createForCertificate"')})}k=b.org.pkijs.getOIDByAlgorithm({name:d});if(k===""){return new Promise(function(n,m){m('Incorrect "hashAlgorithm": '+d)})}if("issuerCertificate" in l){i=l.issuerCertificate}else{return new Promise(function(n,m){m('Parameter "issuerCertificate" is mandatory for "OCSP_REQUEST.createForCertificate"')})}e=e.then(function(m){var n=i.subject.toSchema().toBER(false);return c.digest({name:d},n)},function(m){return new Promise(function(o,n){n(m)})});e=e.then(function(m){j=m;var n=i.subjectPublicKeyInfo.subjectPublicKey.value_block.value_hex;return c.digest({name:d},n)},function(m){return new Promise(function(o,n){n(m)})});e=e.then(function(m){f=m;g.tbsRequest=new b.org.pkijs.simpl.ocsp.TBSRequest({requestList:[new b.org.pkijs.simpl.ocsp.Request({reqCert:new b.org.pkijs.simpl.ocsp.CertID({hashAlgorithm:new b.org.pkijs.simpl.ALGORITHM_IDENTIFIER({algorithm_id:k,algorithm_params:new b.org.pkijs.asn1.NULL()}),issuerNameHash:new b.org.pkijs.asn1.OCTETSTRING({value_hex:j}),issuerKeyHash:new b.org.pkijs.asn1.OCTETSTRING({value_hex:f}),serialNumber:h.serialNumber})})]})},function(m){return new Promise(function(o,n){n(m)})});return e};b.org.pkijs.simpl.ocsp.ResponseBytes=function(){this.responseType="";this.response=new b.org.pkijs.asn1.OCTETSTRING();if((arguments[0] instanceof Object)&&("schema" in arguments[0])){b.org.pkijs.simpl.ocsp.ResponseBytes.prototype.fromSchema.call(this,arguments[0].schema)}else{if(arguments[0] instanceof Object){this.responseType=arguments[0].responseType||"";this.response=arguments[0].response||new b.org.pkijs.asn1.OCTETSTRING()}}};b.org.pkijs.simpl.ocsp.ResponseBytes.prototype.fromSchema=function(d){var c=b.org.pkijs.compareSchema(d,d,b.org.pkijs.schema.ocsp.ResponseBytes({names:{responseType:"responseType",response:"response"}}));if(c.verified===false){throw new Error("Object's schema was not verified against input data for ResponseBytes")}this.responseType=c.result.responseType.value_block.toString();this.response=c.result.response};b.org.pkijs.simpl.ocsp.ResponseBytes.prototype.toSchema=function(){return(new b.org.pkijs.asn1.SEQUENCE({value:[new b.org.pkijs.asn1.OID({value:this.responseType}),this.response]}))};b.org.pkijs.simpl.ocsp.ResponseBytes.prototype.toJSON=function(){return{responseType:this.responseType,response:this.response.toJSON()}};b.org.pkijs.simpl.OCSP_RESPONSE=function(){this.responseStatus=new b.org.pkijs.asn1.ENUMERATED();if((arguments[0] instanceof Object)&&("schema" in arguments[0])){b.org.pkijs.simpl.OCSP_RESPONSE.prototype.fromSchema.call(this,arguments[0].schema)}else{if(arguments[0] instanceof Object){this.responseStatus=arguments[0].responseStatus||new b.org.pkijs.asn1.ENUMERATED();if("responseBytes" in arguments[0]){this.responseBytes=arguments[0].responseBytes}}}};b.org.pkijs.simpl.OCSP_RESPONSE.prototype.fromSchema=function(d){var c=b.org.pkijs.compareSchema(d,d,b.org.pkijs.schema.OCSP_RESPONSE());if(c.verified===false){throw new Error("Object's schema was not verified against input data for OCSP_RESPONSE")}this.responseStatus=c.result.responseStatus;if("responseBytes" in c.result){this.responseBytes=new b.org.pkijs.simpl.ocsp.ResponseBytes({schema:c.result.responseBytes})}};b.org.pkijs.simpl.OCSP_RESPONSE.prototype.toSchema=function(){var c=new Array();c.push(this.responseStatus);if("responseBytes" in this){c.push(new b.org.pkijs.asn1.ASN1_CONSTRUCTED({id_block:{tag_class:3,tag_number:0},value:[this.responseBytes.toSchema()]}))}return(new b.org.pkijs.asn1.SEQUENCE({value:c}))};b.org.pkijs.simpl.OCSP_RESPONSE.prototype.verify=function(){var e=this;if(("responseBytes" in this)===false){return new Promise(function(g,f){f("Empty ResponseBytes field")})}if(this.responseBytes.responseType==="1.3.6.1.5.5.7.48.1.1"){var c=b.org.pkijs.fromBER(this.responseBytes.response.value_block.value_hex);var d=new b.org.pkijs.simpl.OCSP_BASIC_RESPONSE({schema:c.result});return d.verify()}else{return new Promise(function(g,f){f("Unknown ResponseBytes type: "+e.responseBytes.responseType)})}};b.org.pkijs.simpl.OCSP_RESPONSE.prototype.sign=function(c,e){var g=this;if(this.responseBytes.responseType==="1.3.6.1.5.5.7.48.1.1"){var d=b.org.pkijs.fromBER(this.responseBytes.response.value_block.value_hex);var f=new b.org.pkijs.simpl.OCSP_BASIC_RESPONSE({schema:d.result});return f.sign(c,e)}else{return new Promise(function(i,h){h("Unknown ResponseBytes type: "+g.responseBytes.responseType)})}};b.org.pkijs.simpl.OCSP_RESPONSE.prototype.toJSON=function(){var c={responseStatus:this.responseStatus.toJSON()};if("responseBytes" in this){c.responseBytes=this.responseBytes.toJSON()}return c};b.org.pkijs.simpl.ocsp.SingleResponse=function(){this.certID=new b.org.pkijs.simpl.ocsp.CertID();this.certStatus=new b.org.pkijs.asn1.ASN1_CONSTRUCTED({id_block:{tag_class:3,tag_number:3},value:[]});this.thisUpdate=new Date(0,0,0);if((arguments[0] instanceof Object)&&("schema" in arguments[0])){b.org.pkijs.simpl.ocsp.SingleResponse.prototype.fromSchema.call(this,arguments[0].schema)}else{if(arguments[0] instanceof Object){this.certID=arguments[0].certID||new b.org.pkijs.simpl.ocsp.CertID();this.certStatus=arguments[0].certStatus||new b.org.pkijs.asn1.ASN1_CONSTRUCTED({id_block:{tag_class:3,tag_number:3},value:[]});this.thisUpdate=arguments[0].thisUpdate||new Date(0,0,0);if("nextUpdate" in arguments[0]){this.nextUpdate=arguments[0].nextUpdate}if("singleExtensions" in arguments[0]){this.singleExtensions=arguments[0].singleExtensions}}}};b.org.pkijs.simpl.ocsp.SingleResponse.prototype.fromSchema=function(f){var c=b.org.pkijs.compareSchema(f,f,b.org.pkijs.schema.ocsp.SingleResponse({names:{certID:{names:{block_name:"certID"}},certStatus:"certStatus",thisUpdate:"thisUpdate",nextUpdate:"nextUpdate",singleExtensions:"singleExtensions"}}));if(c.verified===false){throw new Error("Object's schema was not verified against input data for SingleResponse")}this.certID=new b.org.pkijs.simpl.ocsp.CertID({schema:c.result.certID});this.certStatus=c.result.certStatus;this.thisUpdate=c.result.thisUpdate.toDate();if("nextUpdate" in c.result){this.nextUpdate=c.result.nextUpdate.toDate()}if("singleExtensions" in c.result){this.singleExtensions=new Array();var e=c.result.singleExtensions.value_block.value;for(var d=0;d<e.length;d++){this.singleExtensions.push(new b.org.pkijs.simpl.EXTENSION({schema:e[d]}))}}};b.org.pkijs.simpl.ocsp.SingleResponse.prototype.toSchema=function(){var e=new Array();e.push(this.certID.toSchema());e.push(this.certStatus);e.push(new b.org.pkijs.asn1.GENERALIZEDTIME({value_date:this.thisUpdate}));if("nextUpdate" in this){e.push(new b.org.pkijs.asn1.GENERALIZEDTIME({value_date:this.nextUpdate}))}if("singleExtensions" in this){var d=new Array();for(var c=0;c<this.singleExtensions.length;c++){d.push(this.singleExtensions[c].toSchema())}e.push(new b.org.pkijs.asn1.SEQUENCE({value:d}))}return(new b.org.pkijs.asn1.SEQUENCE({value:e}))};b.org.pkijs.simpl.ocsp.SingleResponse.prototype.toJSON=function(){var d={certID:this.certID.toJSON(),certStatus:this.certStatus.toJSON(),thisUpdate:this.thisUpdate};if("nextUpdate" in this){d.nextUpdate=this.nextUpdate}if("singleExtensions" in this){d.singleExtensions=new Array();for(var c=0;c<this.singleExtensions.length;c++){d.singleExtensions.push(this.singleExtensions[c].toJSON())}}return d};b.org.pkijs.simpl.ocsp.ResponseData=function(){this.tbs=new ArrayBuffer(0);this.responderID=new b.org.pkijs.simpl.RDN();this.producedAt=new Date(0,0,0);this.responses=new Array();if((arguments[0] instanceof Object)&&("schema" in arguments[0])){b.org.pkijs.simpl.ocsp.ResponseData.prototype.fromSchema.call(this,arguments[0].schema)}else{if(arguments[0] instanceof Object){if("version" in arguments[0]){this.version=arguments[0].version}this.responderID=arguments[0].responderID||new b.org.pkijs.asn1.ASN1_CONSTRUCTED({id_block:{tag_class:3,tag_number:10},value:[]});this.producedAt=arguments[0].producedAt||new Date(0,0,0);this.responses=arguments[0].responses||new Array();if("responseExtensions" in arguments[0]){this.responseExtensions=arguments[0].responseExtensions}}}};b.org.pkijs.simpl.ocsp.ResponseData.prototype.fromSchema=function(f){var c=b.org.pkijs.compareSchema(f,f,b.org.pkijs.schema.ocsp.ResponseData());if(c.verified===false){throw new Error("Object's schema was not verified against input data for ocsp.ResponseData")}this.tbs=c.result.ResponseData.value_before_decode;if("ResponseData.version" in c.result){this.version=c.result["ResponseData.version"].value_block.value_dec}if(c.result["ResponseData.responderID"].id_block.tag_number===1){this.responderID=new b.org.pkijs.simpl.RDN({schema:c.result["ResponseData.responderID"].value_block.value[0]})}else{this.responderID=c.result["ResponseData.responderID"].value_block.value[0]}this.producedAt=c.result["ResponseData.producedAt"].toDate();var g=c.result["ResponseData.responses"];for(var e=0;e<g.length;e++){this.responses.push(new b.org.pkijs.simpl.ocsp.SingleResponse({schema:g[e]}))}if("ResponseData.responseExtensions" in c.result){this.responseExtensions=new Array();var d=c.result["ResponseData.responseExtensions"].value_block.value;for(var e=0;e<d.length;e++){this.responseExtensions.push(new b.org.pkijs.simpl.EXTENSION({schema:d[e]}))}}};b.org.pkijs.simpl.ocsp.ResponseData.prototype.toSchema=function(h){if(typeof h==="undefined"){h=false}var g;if(h===false){if(this.tbs.length===0){return b.org.pkijs.schema.ocsp.ResponseData()}g=b.org.pkijs.fromBER(this.tbs).result}else{var k=new Array();if("version" in this){k.push(new b.org.pkijs.asn1.ASN1_CONSTRUCTED({id_block:{tag_class:3,tag_number:0},value:[new b.org.pkijs.asn1.INTEGER({value:this.version})]}))}if(this.responderID instanceof b.org.pkijs.simpl.RDN){k.push(new b.org.pkijs.asn1.ASN1_CONSTRUCTED({id_block:{tag_class:3,tag_number:1},value:[this.responderID.toSchema()]}))}else{k.push(new b.org.pkijs.asn1.ASN1_CONSTRUCTED({id_block:{tag_class:3,tag_number:2},value:[this.responderID]}))}k.push(new b.org.pkijs.asn1.GENERALIZEDTIME({value_date:this.producedAt}));var f=new Array();for(var d=0;d<this.responses.length;d++){f.push(this.responses[d].toSchema())}k.push(new b.org.pkijs.asn1.SEQUENCE({value:f}));if("responseExtensions" in this){var e=new Array();for(var c=0;c<this.responseExtensions.length;c++){e.push(this.responseExtensions[c].toSchema())}k.push(new b.org.pkijs.asn1.SEQUENCE({value:e}))}g=new b.org.pkijs.asn1.SEQUENCE({value:k})}return g};b.org.pkijs.simpl.ocsp.ResponseData.prototype.toJSON=function(){var d={};if("version" in this){d.version=this.version}if("responderID" in this){d.responderID=this.responderID}if("producedAt" in this){d.producedAt=this.producedAt}if("responses" in this){d.responses=new Array();for(var c=0;c<this.responses.length;c++){d.responses.push(this.responses[c].toJSON())}}if("responseExtensions" in this){d.responseExtensions=new Array();for(var c=0;c<this.responseExtensions.length;c++){d.responseExtensions.push(this.responseExtensions[c].toJSON())}}return d};b.org.pkijs.simpl.OCSP_BASIC_RESPONSE=function(){this.tbsResponseData=new b.org.pkijs.simpl.ocsp.ResponseData();this.signatureAlgorithm=new b.org.pkijs.simpl.ALGORITHM_IDENTIFIER();this.signature=new b.org.pkijs.asn1.BITSTRING();if((arguments[0] instanceof Object)&&("schema" in arguments[0])){b.org.pkijs.simpl.OCSP_BASIC_RESPONSE.prototype.fromSchema.call(this,arguments[0].schema)}else{if(arguments[0] instanceof Object){this.tbsResponseData=arguments[0].tbsResponseData||new b.org.pkijs.simpl.ocsp.ResponseData();this.signatureAlgorithm=arguments[0].signatureAlgorithm||new b.org.pkijs.simpl.ALGORITHM_IDENTIFIER();this.signature=arguments[0].signature||new b.org.pkijs.asn1.BITSTRING();if("certs" in arguments[0]){this.certs=arguments[0].certs}}}};b.org.pkijs.simpl.OCSP_BASIC_RESPONSE.prototype.fromSchema=function(f){var c=b.org.pkijs.compareSchema(f,f,b.org.pkijs.schema.OCSP_BASIC_RESPONSE());if(c.verified===false){throw new Error("Object's schema was not verified against input data for OCSP_BASIC_RESPONSE")}this.tbsResponseData=new b.org.pkijs.simpl.ocsp.ResponseData({schema:c.result["BasicOCSPResponse.tbsResponseData"]});this.signatureAlgorithm=new b.org.pkijs.simpl.ALGORITHM_IDENTIFIER({schema:c.result["BasicOCSPResponse.signatureAlgorithm"]});this.signature=c.result["BasicOCSPResponse.signature"];if("BasicOCSPResponse.certs" in c.result){this.certs=new Array();var d=c.result["BasicOCSPResponse.certs"];for(var e=0;e<d.length;e++){this.certs.push(new b.org.pkijs.simpl.CERT({schema:d[e]}))}}};b.org.pkijs.simpl.OCSP_BASIC_RESPONSE.prototype.toSchema=function(){var e=new Array();e.push(this.tbsResponseData.toSchema());e.push(this.signatureAlgorithm.toSchema());e.push(this.signature);if("certs" in this){var c=new Array();for(var d=0;d<this.certs.length;d++){c.push(this.certs[d].toSchema())}e.push(new b.org.pkijs.asn1.ASN1_CONSTRUCTED({optional:true,id_block:{tag_class:3,tag_number:0},value:[new b.org.pkijs.asn1.SEQUENCE({value:c})]}))}return(new b.org.pkijs.asn1.SEQUENCE({value:e}))};b.org.pkijs.simpl.OCSP_BASIC_RESPONSE.prototype.verify=function(){if(("certs" in this)===false){return new Promise(function(r,q){q("No certificates attached to the BasicOCSPResponce")})}var l=this;var p=null;var k=this.certs;var e=new Uint8Array(this.signature.value_block.value_hex);var g=new Uint8Array(this.tbsResponseData.tbs);var j=-1;var h=Promise.resolve();var c="";var m=new Array();if(arguments[0] instanceof Object){if("trusted_certs" in arguments[0]){m=arguments[0].trusted_certs}}var d=b.org.pkijs.getCrypto();if(typeof d=="undefined"){return new Promise(function(r,q){q("Unable to create WebCrypto object")})}c=b.org.pkijs.getHashAlgorithm(this.signatureAlgorithm);if(c===""){return new Promise(function(r,q){q("Unsupported signature algorithm: "+l.signatureAlgorithm.algorithm_id)})}var o=0;var n={};if(this.tbsResponseData.responderID instanceof b.org.pkijs.simpl.RDN){o=0;n=this.tbsResponseData.responderID}else{if(this.tbsResponseData.responderID instanceof b.org.pkijs.asn1.OCTETSTRING){o=1;n=this.tbsResponseData.responderID}else{return new Promise(function(r,q){q("Wrong value for responderID")})}}if(o===0){h=h.then(function(){for(var q=0;q<k.length;q++){if(k[q].subject.isEqual(n)){j=q;break}}})}else{h=h.then(function(){var r=new Array();for(var q=0;q<k.length;q++){r.push(d.digest({name:"sha-1"},new Uint8Array(k[q].subjectPublicKeyInfo.subjectPublicKey.value_block.value_hex)))}return Promise.all(r).then(function(t){for(var s=0;s<k.length;s++){if(b.org.pkijs.isEqual_buffer(t[s],n.value_block.value_hex)){j=s;break}}})})}function f(r){if((r.issuer.isEqual(p.issuer)===true)&&(r.serialNumber.isEqual(p.serialNumber)===true)){return null}var s=false;for(var q=0;q<r.extensions.length;q++){if(r.extensions[q].extnID==="2.5.29.19"){if("cA" in r.extensions[q].parsedValue){if(r.extensions[q].parsedValue.cA===true){s=true}}}}if(s){return r}else{return null}}var i=new Array();h=h.then(function(q){if(j===(-1)){return new Promise(function(t,s){s("Correct certificate was not found in OCSP response")})}p=k[j];for(var r=0;r<l.certs.length;r++){i.push(f(l.certs[r]))}return Promise.all(i).then(function(v){var u=new Array();u.push(p);for(var t=0;t<v.length;t++){if(v[t]!==null){u.push(v[t])}}var s=new b.org.pkijs.simpl.CERT_CHAIN({certs:u,trusted_certs:m});if("crls" in l){s.crls=l.crls}return s.verify().then(function(w){if(w.result===true){return new Promise(function(y,x){y()})}else{return new Promise(function(y,x){x("Validation of signer's certificate failed")})}},function(w){return new Promise(function(y,x){x("Validation of signer's certificate failed with error: "+((w instanceof Object)?w.result_message:w))})})},function(s){return new Promise(function(u,t){t("Error during checking certificates for CA flag: "+s)})})});h=h.then(function(){var v=b.org.pkijs.getAlgorithmByOID(k[j].signatureAlgorithm.algorithm_id);if(("name" in v)===false){return new Promise(function(x,w){w("Unsupported public key algorithm: "+k[j].signatureAlgorithm.algorithm_id)})}var q=v.name;var s=b.org.pkijs.getAlgorithmParameters(q,"importkey");if("hash" in s.algorithm){s.algorithm.hash.name=c}var u=k[j].subjectPublicKeyInfo.toSchema();var r=u.toBER(false);var t=new Uint8Array(r);return d.importKey("spki",t,s.algorithm,true,s.usages)});h=h.then(function(w){var s=b.org.pkijs.getAlgorithmParameters(w.algorithm.name,"verify");if("hash" in s.algorithm){s.algorithm.hash.name=c}var x=l.signature.value_block.value_hex;if(w.algorithm.name==="ECDSA"){var r=b.org.pkijs.fromBER(x);x=b.org.pkijs.createECDSASignatureFromCMS(r.result)}if(w.algorithm.name==="RSA-PSS"){var v;try{v=new b.org.pkijs.simpl.x509.RSASSA_PSS_params({schema:l.signatureAlgorithm.algorithm_params})}catch(t){return new Promise(function(z,y){y(t)})}if("saltLength" in v){s.algorithm.saltLength=v.saltLength}else{s.algorithm.saltLength=20}var q="SHA-1";if("hashAlgorithm" in v){var u=b.org.pkijs.getAlgorithmByOID(v.hashAlgorithm.algorithm_id);if(("name" in u)===false){return new Promise(function(z,y){y("Unrecognized hash algorithm: "+v.hashAlgorithm.algorithm_id)})}q=u.name}s.algorithm.hash.name=q}return d.verify(s.algorithm,w,new Uint8Array(x),g)});return h};b.org.pkijs.simpl.OCSP_BASIC_RESPONSE.prototype.sign=function(i,d){var g=this;if(typeof i==="undefined"){return new Promise(function(m,l){l("Need to provide a private key for signing")})}if(typeof d==="undefined"){d="SHA-1"}else{var f=b.org.pkijs.getOIDByAlgorithm({name:d});if(f===""){return new Promise(function(m,l){l("Unsupported hash algorithm: "+d)})}}var e=b.org.pkijs.getAlgorithmParameters(i.algorithm.name,"sign");e.algorithm.hash.name=d;switch(i.algorithm.name.toUpperCase()){case"RSASSA-PKCS1-V1_5":case"ECDSA":g.signatureAlgorithm.algorithm_id=b.org.pkijs.getOIDByAlgorithm(e.algorithm);break;case"RSA-PSS":switch(d.toUpperCase()){case"SHA-256":e.algorithm.saltLength=32;break;case"SHA-384":e.algorithm.saltLength=48;break;case"SHA-512":e.algorithm.saltLength=64;break;default:}var j={};if(d.toUpperCase()!=="SHA-1"){var h=b.org.pkijs.getOIDByAlgorithm({name:d});if(h===""){return new Promise(function(m,l){l("Unsupported hash algorithm: "+d)})}j.hashAlgorithm=new b.org.pkijs.simpl.ALGORITHM_IDENTIFIER({algorithm_id:h,algorithm_params:new b.org.pkijs.asn1.NULL()});j.maskGenAlgorithm=new b.org.pkijs.simpl.ALGORITHM_IDENTIFIER({algorithm_id:"1.2.840.113549.1.1.8",algorithm_params:j.hashAlgorithm.toSchema()})}if(e.algorithm.saltLength!==20){j.saltLength=e.algorithm.saltLength}var k=new b.org.pkijs.simpl.x509.RSASSA_PSS_params(j);g.signatureAlgorithm=new b.org.pkijs.simpl.ALGORITHM_IDENTIFIER({algorithm_id:"1.2.840.113549.1.1.10",algorithm_params:k.toSchema()});break;default:return new Promise(function(m,l){l("Unsupported signature algorithm: "+i.algorithm.name)})}g.tbsResponseData.tbs=g.tbsResponseData.toSchema(true).toBER(false);var c=b.org.pkijs.getCrypto();if(typeof c=="undefined"){return new Promise(function(m,l){l("Unable to create WebCrypto object")})}return c.sign(e.algorithm,i,new Uint8Array(g.tbsResponseData.tbs)).then(function(l){if(e.algorithm.name==="ECDSA"){l=b.org.pkijs.createCMSECDSASignature(l)}g.signature=new b.org.pkijs.asn1.BITSTRING({value_hex:l})},function(l){return new Promise(function(n,m){m("Signing error: "+l)})})};b.org.pkijs.simpl.OCSP_BASIC_RESPONSE.prototype.toJSON=function(){var d={tbsResponseData:this.tbsResponseData.toJSON(),signatureAlgorithm:this.signatureAlgorithm.toJSON(),signature:this.signature.toJSON(),};if("certs" in this){d.certs=new Array();for(var c=0;c<this.certs.length;c++){d.certs.push(this.certs[c].toJSON())}}return d};b.org.pkijs.simpl.tsp.MessageImprint=function(){this.hashAlgorithm=new b.org.pkijs.simpl.ALGORITHM_IDENTIFIER();this.hashedMessage=new b.org.pkijs.asn1.OCTETSTRING();if((arguments[0] instanceof Object)&&("schema" in arguments[0])){b.org.pkijs.simpl.tsp.MessageImprint.prototype.fromSchema.call(this,arguments[0].schema)}else{if(arguments[0] instanceof Object){this.hashAlgorithm=arguments[0].hashAlgorithm||new b.org.pkijs.simpl.ALGORITHM_IDENTIFIER();this.hashedMessage=arguments[0].hashedMessage||new b.org.pkijs.asn1.OCTETSTRING()}}};b.org.pkijs.simpl.tsp.MessageImprint.prototype.fromSchema=function(d){var c=b.org.pkijs.compareSchema(d,d,b.org.pkijs.schema.tsp.MessageImprint({names:{hashAlgorithm:{names:{block_name:"hashAlgorithm"}},hashedMessage:"hashedMessage"}}));if(c.verified===false){throw new Error("Object's schema was not verified against input data for MessageImprint")}this.hashAlgorithm=new b.org.pkijs.simpl.ALGORITHM_IDENTIFIER({schema:c.result.hashAlgorithm});this.hashedMessage=c.result.hashedMessage};b.org.pkijs.simpl.tsp.MessageImprint.prototype.toSchema=function(){return(new b.org.pkijs.asn1.SEQUENCE({value:[this.hashAlgorithm.toSchema(),this.hashedMessage]}))};b.org.pkijs.simpl.tsp.MessageImprint.prototype.toJSON=function(){return{hashAlgorithm:this.hashAlgorithm.toJSON(),hashedMessage:this.hashedMessage.toJSON()}};b.org.pkijs.simpl.TSP_REQUEST=function(){this.version=0;this.messageImprint=new b.org.pkijs.simpl.tsp.MessageImprint();if((arguments[0] instanceof Object)&&("schema" in arguments[0])){b.org.pkijs.simpl.TSP_REQUEST.prototype.fromSchema.call(this,arguments[0].schema)}else{if(arguments[0] instanceof Object){this.version=arguments[0].version||0;this.messageImprint=arguments[0].messageImprint||new b.org.pkijs.simpl.tsp.MessageImprint();if("reqPolicy" in arguments[0]){this.reqPolicy=arguments[0].reqPolicy}if("nonce" in arguments[0]){this.nonce=arguments[0].nonce}if("certReq" in arguments[0]){this.certReq=arguments[0].certReq}if("extensions" in arguments[0]){this.extensions=arguments[0].extensions}}}};b.org.pkijs.simpl.TSP_REQUEST.prototype.fromSchema=function(f){var d=b.org.pkijs.compareSchema(f,f,b.org.pkijs.schema.TSP_REQUEST());if(d.verified===false){throw new Error("Object's schema was not verified against input data for TSP_REQUEST")}this.version=d.result["TimeStampReq.version"].value_block.value_dec;this.messageImprint=new b.org.pkijs.simpl.tsp.MessageImprint({schema:d.result["TimeStampReq.messageImprint"]});if("TimeStampReq.reqPolicy" in d.result){this.reqPolicy=d.result["TimeStampReq.reqPolicy"].value_block.toString()}if("TimeStampReq.nonce" in d.result){this.nonce=d.result["TimeStampReq.nonce"]}if("TimeStampReq.certReq" in d.result){this.certReq=d.result["TimeStampReq.certReq"].value_block.value}if("TimeStampReq.extensions" in d.result){this.extensions=new Array();var c=d.result["TimeStampReq.extensions"];for(var e=0;e<c.length;e++){this.extensions.push(new b.org.pkijs.simpl.EXTENSION({schema:c[e]}))}}};b.org.pkijs.simpl.TSP_REQUEST.prototype.toSchema=function(){var e=new Array();e.push(new b.org.pkijs.asn1.INTEGER({value:this.version}));e.push(this.messageImprint.toSchema());if("reqPolicy" in this){e.push(new b.org.pkijs.asn1.OID({value:this.reqPolicy}))}if("nonce" in this){e.push(this.nonce)}if("certReq" in this){e.push(new b.org.pkijs.asn1.BOOLEAN({value:this.certReq}))}if("extensions" in this){var c=new Array();for(var d=0;d<this.extensions.length;d++){c.push(this.extensions[d].toSchema())}e.push(new b.org.pkijs.asn1.ASN1_CONSTRUCTED({optional:true,id_block:{tag_class:3,tag_number:0},value:c}))}return(new b.org.pkijs.asn1.SEQUENCE({value:e}))};b.org.pkijs.simpl.TSP_REQUEST.prototype.toJSON=function(){var d={version:this.version,messageImprint:this.messageImprint.toJSON()};if("reqPolicy" in this){d.reqPolicy=this.reqPolicy}if("nonce" in this){d.nonce=this.nonce.toJSON()}if("certReq" in this){d.certReq=this.certReq}if("extensions" in this){d.extensions=new Array();for(var c=0;c<this.extensions.length;c++){d.extensions.push(this.extensions[c].toJSON())}}return d};b.org.pkijs.simpl.tsp.Accuracy=function(){if((arguments[0] instanceof Object)&&("schema" in arguments[0])){b.org.pkijs.simpl.tsp.Accuracy.prototype.fromSchema.call(this,arguments[0].schema)}else{if(arguments[0] instanceof Object){if("seconds" in arguments[0]){this.seconds=arguments[0].seconds}if("millis" in arguments[0]){this.millis=arguments[0].millis}if("micros" in arguments[0]){this.micros=arguments[0].micros}}}};b.org.pkijs.simpl.tsp.Accuracy.prototype.fromSchema=function(e){var d=b.org.pkijs.compareSchema(e,e,b.org.pkijs.schema.tsp.Accuracy({names:{seconds:"seconds",millis:"millis",micros:"micros"}}));if(d.verified===false){throw new Error("Object's schema was not verified against input data for tsp.Accuracy")}if("seconds" in d.result){this.seconds=d.result.seconds.value_block.value_dec}if("millis" in d.result){var f=new b.org.pkijs.asn1.INTEGER({value_hex:d.result.millis.value_block.value_hex});this.millis=f.value_block.value_dec}if("micros" in d.result){var c=new b.org.pkijs.asn1.INTEGER({value_hex:d.result.micros.value_block.value_hex});this.micros=c.value_block.value_dec}};b.org.pkijs.simpl.tsp.Accuracy.prototype.toSchema=function(){var e=new Array();if("seconds" in this){e.push(new b.org.pkijs.asn1.INTEGER({value:this.seconds}))}if("millis" in this){var d=new b.org.pkijs.asn1.INTEGER({value:this.millis});e.push(new b.org.pkijs.asn1.ASN1_PRIMITIVE({id_block:{tag_class:3,tag_number:0},value_hex:d.value_block.value_hex}))}if("micros" in this){var c=new b.org.pkijs.asn1.INTEGER({value:this.micros});e.push(new b.org.pkijs.asn1.ASN1_PRIMITIVE({id_block:{tag_class:3,tag_number:1},value_hex:c.value_block.value_hex}))}return(new b.org.pkijs.asn1.SEQUENCE({value:e}))};b.org.pkijs.simpl.tsp.Accuracy.prototype.toJSON=function(){var c={};if("seconds" in this){c.seconds=this.seconds}if("millis" in this){c.millis=this.millis}if("micros" in this){c.micros=this.micros}return c};b.org.pkijs.simpl.TST_INFO=function(){this.version=0;this.policy="";this.messageImprint=new b.org.pkijs.simpl.tsp.MessageImprint();this.serialNumber=new b.org.pkijs.asn1.INTEGER();this.genTime=new Date(0,0,0);if((arguments[0] instanceof Object)&&("schema" in arguments[0])){b.org.pkijs.simpl.TST_INFO.prototype.fromSchema.call(this,arguments[0].schema)}else{if(arguments[0] instanceof Object){this.version=arguments[0].version||0;this.policy=arguments[0].policy||"";this.messageImprint=arguments[0].messageImprint||new b.org.pkijs.simpl.tsp.MessageImprint();this.serialNumber=arguments[0].serialNumber||new b.org.pkijs.asn1.INTEGER();this.genTime=arguments[0].genTime||new Date(0,0,0);if("accuracy" in arguments[0]){this.accuracy=arguments[0].accuracy}if("ordering" in arguments[0]){this.ordering=arguments[0].ordering}if("nonce" in arguments[0]){this.nonce=arguments[0].nonce}if("tsa" in arguments[0]){this.tsa=arguments[0].tsa}if("extensions" in arguments[0]){this.extensions=arguments[0].extensions}}}};b.org.pkijs.simpl.TST_INFO.prototype.fromSchema=function(f){var d=b.org.pkijs.compareSchema(f,f,b.org.pkijs.schema.TST_INFO());if(d.verified===false){throw new Error("Object's schema was not verified against input data for TST_INFO")}this.version=d.result["TSTInfo.version"].value_block.value_dec;this.policy=d.result["TSTInfo.policy"].value_block.toString();this.messageImprint=new b.org.pkijs.simpl.tsp.MessageImprint({schema:d.result["TSTInfo.messageImprint"]});this.serialNumber=d.result["TSTInfo.serialNumber"];this.genTime=d.result["TSTInfo.genTime"].toDate();if("TSTInfo.accuracy" in d.result){this.accuracy=new b.org.pkijs.simpl.tsp.Accuracy({schema:d.result["TSTInfo.accuracy"]})}if("TSTInfo.ordering" in d.result){this.ordering=d.result["TSTInfo.ordering"].value_block.value}if("TSTInfo.nonce" in d.result){this.nonce=d.result["TSTInfo.nonce"]}if("TSTInfo.tsa" in d.result){this.tsa=new b.org.pkijs.simpl.GENERAL_NAME({schema:d.result["TSTInfo.tsa"]})}if("TSTInfo.extensions" in d.result){var c=d.result["TSTInfo.extensions"];for(var e=0;e<c.length;e++){this.extensions.push(new b.org.pkijs.simpl.EXTENSION({schema:c[e]}))}}};b.org.pkijs.simpl.TST_INFO.prototype.toSchema=function(){var e=new Array();e.push(new b.org.pkijs.asn1.INTEGER({value:this.version}));e.push(new b.org.pkijs.asn1.OID({value:this.policy}));e.push(this.messageImprint.toSchema());e.push(this.serialNumber);e.push(new b.org.pkijs.asn1.GENERALIZEDTIME({value_date:this.genTime}));if("accuracy" in this){e.push(this.accuracy.toSchema())}if("ordering" in this){e.push(new b.org.pkijs.asn1.BOOLEAN({value:this.ordering}))}if("nonce" in this){e.push(this.nonce)}if("tsa" in this){e.push(new b.org.pkijs.asn1.ASN1_CONSTRUCTED({optional:true,id_block:{tag_class:3,tag_number:0},value:[this.tsa.toSchema()]}))}if("extensions" in this){var c=new Array();for(var d=0;d<this.extensions.length;d++){c.push(this.extensions[d].toSchema())}e.push(new b.org.pkijs.asn1.ASN1_CONSTRUCTED({optional:true,id_block:{tag_class:3,tag_number:1},value:c}))}return(new b.org.pkijs.asn1.SEQUENCE({value:e}))};b.org.pkijs.simpl.TST_INFO.prototype.toJSON=function(){var d={version:this.version,policy:this.policy,messageImprint:this.messageImprint.toJSON(),serialNumber:this.serialNumber.toJSON(),genTime:this.genTime};if("accuracy" in this){d.accuracy=this.accuracy.toJSON()}if("ordering" in this){d.ordering=this.ordering}if("nonce" in this){d.nonce=this.nonce.toJSON()}if("tsa" in this){d.tsa=this.tsa.toJSON()}if("extensions" in this){d.extensions=new Array();for(var c=0;c<this.extensions.length;c++){d.extensions.push(this.extensions[c].toJSON())}}return d};b.org.pkijs.simpl.tsp.PKIStatusInfo=function(){this.status=2;if((arguments[0] instanceof Object)&&("schema" in arguments[0])){b.org.pkijs.simpl.tsp.PKIStatusInfo.prototype.fromSchema.call(this,arguments[0].schema)}else{if(arguments[0] instanceof Object){this.status=b.org.pkijs.getValue(arguments[0],"status",2);if("statusStrings" in arguments[0]){this.statusStrings=arguments[0].statusStrings}if("failInfo" in arguments[0]){this.failInfo=arguments[0].failInfo}}}};b.org.pkijs.simpl.tsp.PKIStatusInfo.prototype.fromSchema=function(e){var c=b.org.pkijs.compareSchema(e,e,b.org.pkijs.schema.tsp.PKIStatusInfo({names:{status:"status",statusStrings:"statusStrings",failInfo:"failInfo"}}));if(c.verified===false){throw new Error("Object's schema was not verified against input data for PKIStatusInfo")}var d=c.result.status;if((d.value_block.is_hex_only===true)||(d.value_block.value_dec<0)||(d.value_block.value_dec>5)){throw new Error('PKIStatusInfo "status" has invalid value')}this.status=d.value_block.value_dec;if("statusStrings" in c.result){this.statusStrings=c.result.statusStrings}if("failInfo" in c.result){this.failInfo=c.result.failInfo}};b.org.pkijs.simpl.tsp.PKIStatusInfo.prototype.toSchema=function(){var c=new Array();c.push(new b.org.pkijs.asn1.INTEGER({value:this.status}));if("statusStrings" in this){c.push(new b.org.pkijs.asn1.SEQUENCE({optional:true,value:this.statusStrings}))}if("failInfo" in this){c.push(this.failInfo)}return(new b.org.pkijs.asn1.SEQUENCE({value:c}))};b.org.pkijs.simpl.tsp.PKIStatusInfo.prototype.toJSON=function(){var d={status:this.status};if("statusStrings" in this){d.statusStrings=new Array();for(var c=0;c<this.statusStrings.length;c++){d.statusStrings.push(this.statusStrings[c].toJSON())}}if("failInfo" in this){d.failInfo=this.failInfo.toJSON()}return d};b.org.pkijs.simpl.TSP_RESPONSE=function(){this.status=new b.org.pkijs.simpl.tsp.PKIStatusInfo();if((arguments[0] instanceof Object)&&("schema" in arguments[0])){b.org.pkijs.simpl.TSP_RESPONSE.prototype.fromSchema.call(this,arguments[0].schema)}else{if(arguments[0] instanceof Object){this.status=arguments[0].status||new b.org.pkijs.simpl.tsp.PKIStatusInfo();if("timeStampToken" in arguments[0]){this.timeStampToken=arguments[0].timeStampToken}}}};b.org.pkijs.simpl.TSP_RESPONSE.prototype.fromSchema=function(d){var c=b.org.pkijs.compareSchema(d,d,b.org.pkijs.schema.TSP_RESPONSE());if(c.verified===false){throw new Error("Object's schema was not verified against input data for TSP_RESPONSE")}this.status=new b.org.pkijs.simpl.tsp.PKIStatusInfo({schema:c.result["TimeStampResp.status"]});if("TimeStampResp.timeStampToken" in c.result){this.timeStampToken=new b.org.pkijs.simpl.CMS_CONTENT_INFO({schema:c.result["TimeStampResp.timeStampToken"]})}};b.org.pkijs.simpl.TSP_RESPONSE.prototype.toSchema=function(){var c=new Array();c.push(this.status.toSchema());if("timeStampToken" in this){c.push(this.timeStampToken.toSchema())}return(new b.org.pkijs.asn1.SEQUENCE({value:c}))};b.org.pkijs.simpl.TSP_RESPONSE.prototype.verify=function(){var e=this;if(("timeStampToken" in this)===false){return new Promise(function(g,f){f("timeStampToken is absent in TSP response")})}var d=new Array();if(arguments[0] instanceof Object){if("trusted_certs" in arguments[0]){d=arguments[0].trusted_certs}}if(this.timeStampToken.contentType!=="1.2.840.113549.1.7.2"){return new Promise(function(g,f){f("Wrong format of timeStampToken: "+e.timeStampToken.contentType)})}var c=new b.org.pkijs.simpl.CMS_SIGNED_DATA({schema:this.timeStampToken.content});return c.verify({signer:0,trusted_certs:d})};b.org.pkijs.simpl.TSP_RESPONSE.prototype.sign=function(c,e){var f=this;if(("timeStampToken" in this)===false){return new Promise(function(h,g){g("timeStampToken is absent in TSP response")})}if(this.timeStampToken.contentType!=="1.2.840.113549.1.7.2"){return new Promise(function(h,g){g("Wrong format of timeStampToken: "+f.timeStampToken.contentType)})}var d=new b.org.pkijs.simpl.CMS_SIGNED_DATA({schema:this.timeStampToken.content});return d.sign(c,0,e)};b.org.pkijs.simpl.TSP_RESPONSE.prototype.toJSON=function(){var c={status:this.status};if("timeStampToken" in this){c.timeStampToken=this.timeStampToken.toJSON()}return c}})(typeof exports!=="undefined"?exports:window);